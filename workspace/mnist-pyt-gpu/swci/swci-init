# Assumption : SWOP is already running

# SWCI context setup
EXIT ON FAILURE
wait for <SN-IPADDRESS>
create context kathlab-task <SN-IPADDRESS>
switch context kathlab-task
EXIT ON FAILURE OFF

#Change to the directory where we are mounting the host
cd /platform/swarm/usr

# Create and finalize build task
EXIT ON FAILURE
create task from taskdefs/user_env_pyt_build_task_<HOST-IPADDRESS>.yaml
finalize task user_env_pyt_build_task_<HOST-IPADDRESS>
get task info user_env_pyt_build_task_<HOST-IPADDRESS>
get task body user_env_pyt_build_task_<HOST-IPADDRESS>
list tasks
EXIT ON FAILURE OFF

# Assign build task to taskrunner
EXIT ON FAILURE
RESET TASKRUNNER defaulttaskbb.taskdb.sml.hpe
ASSIGN TASK user_env_pyt_build_task TO defaulttaskbb.taskdb.sml.hpe WITH <NUM-MIN_PEERS> PEERS
WAIT FOR TASKRUNNER defaulttaskbb.taskdb.sml.hpe
EXIT ON FAILURE OFF

# Build task was already run. Now build and run swarm run tasks

# Create and finalize swarm run task
EXIT ON FAILURE
create task from taskdefs/swarm_task.yaml
finalize task swarm_task
get task info swarm_task
get task body swarm_task
list tasks
EXIT ON FAILURE OFF

# Assign run task
EXIT ON FAILURE
RESET TASKRUNNER defaulttaskbb.taskdb.sml.hpe
ASSIGN TASK swarm_ask TO defaulttaskbb.taskdb.sml.hpe WITH <NUM-MIN_PEERS> PEERS
WAIT FOR TASKRUNNER defaulttaskbb.taskdb.sml.hpe
# Grace period for ML container to save the model,
# before the below reset command cleans up the ML and SL Containers.
SLEEP 15
RESET TASKRUNNER defaulttaskbb.taskdb.sml.hpe
EXIT ON FAILURE OFF

# List and reset training contract
EXIT ON FAILURE
LIST CONTRACTS
RESET CONTRACT defaultbb.cqdb.sml.hpe
EXIT ON FAILURE OFF

# Exit
EXIT
